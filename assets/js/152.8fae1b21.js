(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{420:function(a,t,r){"use strict";r.r(t);var s=r(9),_=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"note-vue-js设计与实现-202201-vue3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#note-vue-js设计与实现-202201-vue3"}},[a._v("#")]),a._v(" [Note]Vue.js设计与实现-202201(Vue3)")]),a._v(" "),r("ul",[r("li",[a._v("@doc "),r("a",{attrs:{href:"https://weread.qq.com/web/bookDetail/c5c32170813ab7177g0181ae",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://weread.qq.com/web/bookDetail/c5c32170813ab7177g0181ae"),r("OutboundLink")],1)])]),a._v(" "),r("hr"),a._v(" "),r("h1",{attrs:{id:"本书内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本书内容"}},[a._v("#")]),a._v(" 本书内容")]),a._v(" "),r("h1",{attrs:{id:"本书结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本书结构"}},[a._v("#")]),a._v(" 本书结构")]),a._v(" "),r("h1",{attrs:{id:"源代码及勘误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#源代码及勘误"}},[a._v("#")]),a._v(" 源代码及勘误")]),a._v(" "),r("h1",{attrs:{id:"致谢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#致谢"}},[a._v("#")]),a._v(" 致谢")]),a._v(" "),r("h1",{attrs:{id:"第一篇-框架设计概览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第一篇-框架设计概览"}},[a._v("#")]),a._v(" 第一篇 框架设计概览")]),a._v(" "),r("h1",{attrs:{id:"第1章-权衡的艺术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第1章-权衡的艺术"}},[a._v("#")]),a._v(" 第1章 权衡的艺术")]),a._v(" "),r("h1",{attrs:{id:"_1-1-命令式和声明式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-命令式和声明式"}},[a._v("#")]),a._v(" 1.1 命令式和声明式")]),a._v(" "),r("h1",{attrs:{id:"_1-2-性能与可维护性的权衡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-性能与可维护性的权衡"}},[a._v("#")]),a._v(" 1.2 性能与可维护性的权衡")]),a._v(" "),r("h1",{attrs:{id:"_1-3-虚拟-dom-的性能到底如何"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-虚拟-dom-的性能到底如何"}},[a._v("#")]),a._v(" 1.3 虚拟 DOM 的性能到底如何")]),a._v(" "),r("h1",{attrs:{id:"_1-4-运行时和编译时"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-运行时和编译时"}},[a._v("#")]),a._v(" 1.4 运行时和编译时")]),a._v(" "),r("h1",{attrs:{id:"_1-5-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-总结"}},[a._v("#")]),a._v(" 1.5 总结")]),a._v(" "),r("h1",{attrs:{id:"第2章-框架设计的核心要素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第2章-框架设计的核心要素"}},[a._v("#")]),a._v(" 第2章 框架设计的核心要素")]),a._v(" "),r("h1",{attrs:{id:"_2-1-提升用户的开发体验"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-提升用户的开发体验"}},[a._v("#")]),a._v(" 2.1 提升用户的开发体验")]),a._v(" "),r("h1",{attrs:{id:"_2-2-控制框架代码的体积"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-控制框架代码的体积"}},[a._v("#")]),a._v(" 2.2 控制框架代码的体积")]),a._v(" "),r("h1",{attrs:{id:"_2-3-框架要做到良好的-tree-shaking"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-框架要做到良好的-tree-shaking"}},[a._v("#")]),a._v(" 2.3 框架要做到良好的 Tree-Shaking")]),a._v(" "),r("h1",{attrs:{id:"_2-4-框架应该输出怎样的构建产物"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-框架应该输出怎样的构建产物"}},[a._v("#")]),a._v(" 2.4 框架应该输出怎样的构建产物")]),a._v(" "),r("h1",{attrs:{id:"_2-5-特性开关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-特性开关"}},[a._v("#")]),a._v(" 2.5 特性开关")]),a._v(" "),r("h1",{attrs:{id:"_2-6-错误处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-错误处理"}},[a._v("#")]),a._v(" 2.6 错误处理")]),a._v(" "),r("h1",{attrs:{id:"_2-7-良好的-typescript-类型支持"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-良好的-typescript-类型支持"}},[a._v("#")]),a._v(" 2.7 良好的 TypeScript 类型支持")]),a._v(" "),r("h1",{attrs:{id:"_2-8-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-总结"}},[a._v("#")]),a._v(" 2.8 总结")]),a._v(" "),r("h1",{attrs:{id:"第3章-vue-js-3-的设计思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第3章-vue-js-3-的设计思路"}},[a._v("#")]),a._v(" 第3章 Vue.js 3 的设计思路")]),a._v(" "),r("h1",{attrs:{id:"_3-1-声明式地描述-ui"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-声明式地描述-ui"}},[a._v("#")]),a._v(" 3.1 声明式地描述 UI")]),a._v(" "),r("h1",{attrs:{id:"_3-2-初识渲染器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-初识渲染器"}},[a._v("#")]),a._v(" 3.2 初识渲染器")]),a._v(" "),r("h1",{attrs:{id:"_3-3-组件的本质"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-组件的本质"}},[a._v("#")]),a._v(" 3.3 组件的本质")]),a._v(" "),r("h1",{attrs:{id:"_3-4-模板的工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-模板的工作原理"}},[a._v("#")]),a._v(" 3.4 模板的工作原理")]),a._v(" "),r("h1",{attrs:{id:"_3-5-vue-js-是各个模块组成的有机整体"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-vue-js-是各个模块组成的有机整体"}},[a._v("#")]),a._v(" 3.5 Vue.js 是各个模块组成的有机整体")]),a._v(" "),r("h1",{attrs:{id:"_3-6-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-总结"}},[a._v("#")]),a._v(" 3.6 总结")]),a._v(" "),r("h1",{attrs:{id:"第二篇-响应系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第二篇-响应系统"}},[a._v("#")]),a._v(" 第二篇 响应系统")]),a._v(" "),r("h1",{attrs:{id:"第4章-响应系统的作用与实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第4章-响应系统的作用与实现"}},[a._v("#")]),a._v(" 第4章 响应系统的作用与实现")]),a._v(" "),r("h1",{attrs:{id:"_4-1-响应式数据与副作用函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-响应式数据与副作用函数"}},[a._v("#")]),a._v(" 4.1 响应式数据与副作用函数")]),a._v(" "),r("h1",{attrs:{id:"_4-2-响应式数据的基本实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-响应式数据的基本实现"}},[a._v("#")]),a._v(" 4.2 响应式数据的基本实现")]),a._v(" "),r("h1",{attrs:{id:"_4-3-设计一个完善的响应系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-设计一个完善的响应系统"}},[a._v("#")]),a._v(" 4.3 设计一个完善的响应系统")]),a._v(" "),r("h1",{attrs:{id:"_4-4-分支切换与-cleanup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-分支切换与-cleanup"}},[a._v("#")]),a._v(" 4.4 分支切换与 cleanup")]),a._v(" "),r("h1",{attrs:{id:"_4-5-嵌套的-effect-与-effect-栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-嵌套的-effect-与-effect-栈"}},[a._v("#")]),a._v(" 4.5 嵌套的 effect 与 effect 栈")]),a._v(" "),r("h1",{attrs:{id:"_4-6-避免无限递归循环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-避免无限递归循环"}},[a._v("#")]),a._v(" 4.6 避免无限递归循环")]),a._v(" "),r("h1",{attrs:{id:"_4-7-调度执行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-调度执行"}},[a._v("#")]),a._v(" 4.7 调度执行")]),a._v(" "),r("h1",{attrs:{id:"_4-8-计算属性-computed-与-lazy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-计算属性-computed-与-lazy"}},[a._v("#")]),a._v(" 4.8 计算属性 computed 与 lazy")]),a._v(" "),r("h1",{attrs:{id:"_4-9-watch-的实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-watch-的实现原理"}},[a._v("#")]),a._v(" 4.9 watch 的实现原理")]),a._v(" "),r("h1",{attrs:{id:"_4-10-立即执行的-watch-与回调执行时机"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-10-立即执行的-watch-与回调执行时机"}},[a._v("#")]),a._v(" 4.10 立即执行的 watch 与回调执行时机")]),a._v(" "),r("h1",{attrs:{id:"_4-11-过期的副作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-11-过期的副作用"}},[a._v("#")]),a._v(" 4.11 过期的副作用")]),a._v(" "),r("h1",{attrs:{id:"_4-12-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-12-总结"}},[a._v("#")]),a._v(" 4.12 总结")]),a._v(" "),r("h1",{attrs:{id:"第5章-非原始值的响应式方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第5章-非原始值的响应式方案"}},[a._v("#")]),a._v(" 第5章 非原始值的响应式方案")]),a._v(" "),r("h1",{attrs:{id:"_5-1-理解-proxy-和-reflect"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-理解-proxy-和-reflect"}},[a._v("#")]),a._v(" 5.1 理解 Proxy 和 Reflect")]),a._v(" "),r("h1",{attrs:{id:"_5-2-javascript-对象及-proxy-的工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-javascript-对象及-proxy-的工作原理"}},[a._v("#")]),a._v(" 5.2 JavaScript 对象及 Proxy 的工作原理")]),a._v(" "),r("h1",{attrs:{id:"_5-3-如何代理-object"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-如何代理-object"}},[a._v("#")]),a._v(" 5.3 如何代理 Object")]),a._v(" "),r("h1",{attrs:{id:"_5-4-合理地触发响应"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-合理地触发响应"}},[a._v("#")]),a._v(" 5.4 合理地触发响应")]),a._v(" "),r("h1",{attrs:{id:"_5-5-浅响应与深响应"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-浅响应与深响应"}},[a._v("#")]),a._v(" 5.5 浅响应与深响应")]),a._v(" "),r("h1",{attrs:{id:"_5-6-只读和浅只读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-只读和浅只读"}},[a._v("#")]),a._v(" 5.6 只读和浅只读")]),a._v(" "),r("h1",{attrs:{id:"_5-7-代理数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-代理数组"}},[a._v("#")]),a._v(" 5.7 代理数组")]),a._v(" "),r("h1",{attrs:{id:"_5-7-1-数组的索引与-length"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-1-数组的索引与-length"}},[a._v("#")]),a._v(" 5.7.1 数组的索引与 length")]),a._v(" "),r("h1",{attrs:{id:"_5-7-2-遍历数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-2-遍历数组"}},[a._v("#")]),a._v(" 5.7.2 遍历数组")]),a._v(" "),r("h1",{attrs:{id:"_5-7-3-数组的查找方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-3-数组的查找方法"}},[a._v("#")]),a._v(" 5.7.3 数组的查找方法")]),a._v(" "),r("h1",{attrs:{id:"_5-7-4-隐式修改数组长度的原型方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-4-隐式修改数组长度的原型方法"}},[a._v("#")]),a._v(" 5.7.4 隐式修改数组长度的原型方法")]),a._v(" "),r("h1",{attrs:{id:"_5-8-代理-set-和-map"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-代理-set-和-map"}},[a._v("#")]),a._v(" 5.8 代理 Set 和 Map")]),a._v(" "),r("h1",{attrs:{id:"_5-8-1-如何代理-set-和-map"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-1-如何代理-set-和-map"}},[a._v("#")]),a._v(" 5.8.1 如何代理 Set 和 Map")]),a._v(" "),r("h1",{attrs:{id:"_5-8-2-建立响应联系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-2-建立响应联系"}},[a._v("#")]),a._v(" 5.8.2 建立响应联系")]),a._v(" "),r("h1",{attrs:{id:"_5-8-3-避免污染原始数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-3-避免污染原始数据"}},[a._v("#")]),a._v(" 5.8.3 避免污染原始数据")]),a._v(" "),r("h1",{attrs:{id:"_5-8-4-处理-foreach"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-4-处理-foreach"}},[a._v("#")]),a._v(" 5.8.4 处理 forEach")]),a._v(" "),r("h1",{attrs:{id:"_5-8-5-迭代器方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-5-迭代器方法"}},[a._v("#")]),a._v(" 5.8.5 迭代器方法")]),a._v(" "),r("h1",{attrs:{id:"_5-8-6-values-与-keys-方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-6-values-与-keys-方法"}},[a._v("#")]),a._v(" 5.8.6 values 与 keys 方法")]),a._v(" "),r("h1",{attrs:{id:"_5-9-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-总结"}},[a._v("#")]),a._v(" 5.9 总结")]),a._v(" "),r("h1",{attrs:{id:"第6章-原始值的响应式方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第6章-原始值的响应式方案"}},[a._v("#")]),a._v(" 第6章 原始值的响应式方案")]),a._v(" "),r("h1",{attrs:{id:"_6-1-引入-ref-的概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-引入-ref-的概念"}},[a._v("#")]),a._v(" 6.1 引入 ref 的概念")]),a._v(" "),r("h1",{attrs:{id:"_6-2-响应丢失问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-响应丢失问题"}},[a._v("#")]),a._v(" 6.2 响应丢失问题")]),a._v(" "),r("h1",{attrs:{id:"_6-3-自动脱-ref"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-自动脱-ref"}},[a._v("#")]),a._v(" 6.3 自动脱 ref")]),a._v(" "),r("h1",{attrs:{id:"_6-4-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-总结"}},[a._v("#")]),a._v(" 6.4 总结")]),a._v(" "),r("h1",{attrs:{id:"第三篇-渲染器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第三篇-渲染器"}},[a._v("#")]),a._v(" 第三篇 渲染器")]),a._v(" "),r("h1",{attrs:{id:"第7章-渲染器的设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第7章-渲染器的设计"}},[a._v("#")]),a._v(" 第7章 渲染器的设计")]),a._v(" "),r("h1",{attrs:{id:"_7-1-渲染器与响应系统的结合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-渲染器与响应系统的结合"}},[a._v("#")]),a._v(" 7.1 渲染器与响应系统的结合")]),a._v(" "),r("h1",{attrs:{id:"_7-2-渲染器的基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-渲染器的基本概念"}},[a._v("#")]),a._v(" 7.2 渲染器的基本概念")]),a._v(" "),r("h1",{attrs:{id:"_7-3-自定义渲染器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-自定义渲染器"}},[a._v("#")]),a._v(" 7.3 自定义渲染器")]),a._v(" "),r("h1",{attrs:{id:"_7-4-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-总结"}},[a._v("#")]),a._v(" 7.4 总结")]),a._v(" "),r("h1",{attrs:{id:"第8章-挂载与更新"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第8章-挂载与更新"}},[a._v("#")]),a._v(" 第8章 挂载与更新")]),a._v(" "),r("h1",{attrs:{id:"_8-1-挂载子节点和元素的属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-挂载子节点和元素的属性"}},[a._v("#")]),a._v(" 8.1 挂载子节点和元素的属性")]),a._v(" "),r("h1",{attrs:{id:"_8-2-html-attributes-与-dom-properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-html-attributes-与-dom-properties"}},[a._v("#")]),a._v(" 8.2 HTML Attributes 与 DOM Properties")]),a._v(" "),r("h1",{attrs:{id:"_8-3-正确地设置元素属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-正确地设置元素属性"}},[a._v("#")]),a._v(" 8.3 正确地设置元素属性")]),a._v(" "),r("h1",{attrs:{id:"_8-4-class-的处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-class-的处理"}},[a._v("#")]),a._v(" 8.4 class 的处理")]),a._v(" "),r("h1",{attrs:{id:"_8-5-卸载操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-卸载操作"}},[a._v("#")]),a._v(" 8.5 卸载操作")]),a._v(" "),r("h1",{attrs:{id:"_8-6-区分-vnode-的类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-区分-vnode-的类型"}},[a._v("#")]),a._v(" 8.6 区分 vnode 的类型")]),a._v(" "),r("h1",{attrs:{id:"_8-7-事件的处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-7-事件的处理"}},[a._v("#")]),a._v(" 8.7 事件的处理")]),a._v(" "),r("h1",{attrs:{id:"_8-8-事件冒泡与更新时机问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-8-事件冒泡与更新时机问题"}},[a._v("#")]),a._v(" 8.8 事件冒泡与更新时机问题")]),a._v(" "),r("h1",{attrs:{id:"_8-9-更新子节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-9-更新子节点"}},[a._v("#")]),a._v(" 8.9 更新子节点")]),a._v(" "),r("h1",{attrs:{id:"_8-10-文本节点和注释节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-10-文本节点和注释节点"}},[a._v("#")]),a._v(" 8.10 文本节点和注释节点")]),a._v(" "),r("h1",{attrs:{id:"_8-11-fragment"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-11-fragment"}},[a._v("#")]),a._v(" 8.11 Fragment")]),a._v(" "),r("h1",{attrs:{id:"_8-12-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-12-总结"}},[a._v("#")]),a._v(" 8.12 总结")]),a._v(" "),r("h1",{attrs:{id:"第9章-简单-diff-算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第9章-简单-diff-算法"}},[a._v("#")]),a._v(" 第9章 简单 Diff 算法")]),a._v(" "),r("h1",{attrs:{id:"_9-1-减少-dom-操作的性能开销"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-减少-dom-操作的性能开销"}},[a._v("#")]),a._v(" 9.1 减少 DOM 操作的性能开销")]),a._v(" "),r("h1",{attrs:{id:"_9-2-dom-复用与-key-的作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-dom-复用与-key-的作用"}},[a._v("#")]),a._v(" 9.2 DOM 复用与 key 的作用")]),a._v(" "),r("h1",{attrs:{id:"_9-3-找到需要移动的元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-找到需要移动的元素"}},[a._v("#")]),a._v(" 9.3 找到需要移动的元素")]),a._v(" "),r("h1",{attrs:{id:"_9-4-如何移动元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-如何移动元素"}},[a._v("#")]),a._v(" 9.4 如何移动元素")]),a._v(" "),r("h1",{attrs:{id:"_9-5-添加新元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-添加新元素"}},[a._v("#")]),a._v(" 9.5 添加新元素")]),a._v(" "),r("h1",{attrs:{id:"_9-6-移除不存在的元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-移除不存在的元素"}},[a._v("#")]),a._v(" 9.6 移除不存在的元素")]),a._v(" "),r("h1",{attrs:{id:"_9-7-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-总结"}},[a._v("#")]),a._v(" 9.7 总结")]),a._v(" "),r("h1",{attrs:{id:"第10章-双端-diff-算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第10章-双端-diff-算法"}},[a._v("#")]),a._v(" 第10章 双端 Diff 算法")]),a._v(" "),r("h1",{attrs:{id:"_10-1-双端比较的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-双端比较的原理"}},[a._v("#")]),a._v(" 10.1 双端比较的原理")]),a._v(" "),r("h1",{attrs:{id:"_10-2-双端比较的优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-双端比较的优势"}},[a._v("#")]),a._v(" 10.2 双端比较的优势")]),a._v(" "),r("h1",{attrs:{id:"_10-3-非理想状况的处理方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-非理想状况的处理方式"}},[a._v("#")]),a._v(" 10.3 非理想状况的处理方式")]),a._v(" "),r("h1",{attrs:{id:"_10-4-添加新元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-添加新元素"}},[a._v("#")]),a._v(" 10.4 添加新元素")]),a._v(" "),r("h1",{attrs:{id:"_10-5-移除不存在的元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-移除不存在的元素"}},[a._v("#")]),a._v(" 10.5 移除不存在的元素")]),a._v(" "),r("h1",{attrs:{id:"_10-6-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-6-总结"}},[a._v("#")]),a._v(" 10.6 总结")]),a._v(" "),r("h1",{attrs:{id:"第11章-快速-diff-算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第11章-快速-diff-算法"}},[a._v("#")]),a._v(" 第11章 快速 Diff 算法")]),a._v(" "),r("h1",{attrs:{id:"_11-1-相同的前置元素和后置元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-相同的前置元素和后置元素"}},[a._v("#")]),a._v(" 11.1 相同的前置元素和后置元素")]),a._v(" "),r("h1",{attrs:{id:"_11-2-判断是否需要进行-dom-移动操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-判断是否需要进行-dom-移动操作"}},[a._v("#")]),a._v(" 11.2 判断是否需要进行 DOM 移动操作")]),a._v(" "),r("h1",{attrs:{id:"_11-3-如何移动元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-如何移动元素"}},[a._v("#")]),a._v(" 11.3 如何移动元素")]),a._v(" "),r("h1",{attrs:{id:"_11-4-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-总结"}},[a._v("#")]),a._v(" 11.4 总结")]),a._v(" "),r("h1",{attrs:{id:"第四篇-组件化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第四篇-组件化"}},[a._v("#")]),a._v(" 第四篇 组件化")]),a._v(" "),r("h1",{attrs:{id:"第12章-组件的实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第12章-组件的实现原理"}},[a._v("#")]),a._v(" 第12章 组件的实现原理")]),a._v(" "),r("h1",{attrs:{id:"_12-1-渲染组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-渲染组件"}},[a._v("#")]),a._v(" 12.1 渲染组件")]),a._v(" "),r("h1",{attrs:{id:"_12-2-组件状态与自更新"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-组件状态与自更新"}},[a._v("#")]),a._v(" 12.2 组件状态与自更新")]),a._v(" "),r("h1",{attrs:{id:"_12-3-组件实例与组件的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-组件实例与组件的生命周期"}},[a._v("#")]),a._v(" 12.3 组件实例与组件的生命周期")]),a._v(" "),r("h1",{attrs:{id:"_12-4-props-与组件的被动更新"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-props-与组件的被动更新"}},[a._v("#")]),a._v(" 12.4 props 与组件的被动更新")]),a._v(" "),r("h1",{attrs:{id:"_12-5-setup-函数的作用与实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-setup-函数的作用与实现"}},[a._v("#")]),a._v(" 12.5 setup 函数的作用与实现")]),a._v(" "),r("h1",{attrs:{id:"_12-6-组件事件与-emit-的实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-组件事件与-emit-的实现"}},[a._v("#")]),a._v(" 12.6 组件事件与 emit 的实现")]),a._v(" "),r("h1",{attrs:{id:"_12-7-插槽的工作原理与实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-插槽的工作原理与实现"}},[a._v("#")]),a._v(" 12.7 插槽的工作原理与实现")]),a._v(" "),r("h1",{attrs:{id:"_12-8-注册生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-注册生命周期"}},[a._v("#")]),a._v(" 12.8 注册生命周期")]),a._v(" "),r("h1",{attrs:{id:"_12-9-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-总结"}},[a._v("#")]),a._v(" 12.9 总结")]),a._v(" "),r("h1",{attrs:{id:"第13章-异步组件与函数式组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第13章-异步组件与函数式组件"}},[a._v("#")]),a._v(" 第13章 异步组件与函数式组件")]),a._v(" "),r("h1",{attrs:{id:"_13-1-异步组件要解决的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-异步组件要解决的问题"}},[a._v("#")]),a._v(" 13.1 异步组件要解决的问题")]),a._v(" "),r("h1",{attrs:{id:"_13-2-异步组件的实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-异步组件的实现原理"}},[a._v("#")]),a._v(" 13.2 异步组件的实现原理")]),a._v(" "),r("h1",{attrs:{id:"_13-2-1-封装-defineasynccomponent-函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-1-封装-defineasynccomponent-函数"}},[a._v("#")]),a._v(" 13.2.1 封装 defineAsyncComponent 函数")]),a._v(" "),r("h1",{attrs:{id:"_13-2-2-超时与-error-组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-2-超时与-error-组件"}},[a._v("#")]),a._v(" 13.2.2 超时与 Error 组件")]),a._v(" "),r("h1",{attrs:{id:"_13-2-3-延迟与-loading-组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-3-延迟与-loading-组件"}},[a._v("#")]),a._v(" 13.2.3 延迟与 Loading 组件")]),a._v(" "),r("h1",{attrs:{id:"_13-2-4-重试机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-4-重试机制"}},[a._v("#")]),a._v(" 13.2.4 重试机制")]),a._v(" "),r("h1",{attrs:{id:"_13-3-函数式组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-函数式组件"}},[a._v("#")]),a._v(" 13.3 函数式组件")]),a._v(" "),r("h1",{attrs:{id:"_13-4-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-4-总结"}},[a._v("#")]),a._v(" 13.4 总结")]),a._v(" "),r("h1",{attrs:{id:"第14章-内建组件和模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第14章-内建组件和模块"}},[a._v("#")]),a._v(" 第14章 内建组件和模块")]),a._v(" "),r("h1",{attrs:{id:"_14-1-keepalive-组件的实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-keepalive-组件的实现原理"}},[a._v("#")]),a._v(" 14.1 KeepAlive 组件的实现原理")]),a._v(" "),r("h1",{attrs:{id:"_14-1-1-组件的激活与失活"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-1-组件的激活与失活"}},[a._v("#")]),a._v(" 14.1.1 组件的激活与失活")]),a._v(" "),r("h1",{attrs:{id:"_14-1-2-include-和-exclude"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-2-include-和-exclude"}},[a._v("#")]),a._v(" 14.1.2 include 和 exclude")]),a._v(" "),r("h1",{attrs:{id:"_14-1-3-缓存管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-3-缓存管理"}},[a._v("#")]),a._v(" 14.1.3 缓存管理")]),a._v(" "),r("h1",{attrs:{id:"_14-2-teleport-组件的实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-teleport-组件的实现原理"}},[a._v("#")]),a._v(" 14.2 Teleport 组件的实现原理")]),a._v(" "),r("h1",{attrs:{id:"_14-2-1-teleport-组件要解决的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-1-teleport-组件要解决的问题"}},[a._v("#")]),a._v(" 14.2.1 Teleport 组件要解决的问题")]),a._v(" "),r("h1",{attrs:{id:"_14-2-2-实现-teleport-组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-2-实现-teleport-组件"}},[a._v("#")]),a._v(" 14.2.2 实现 Teleport 组件")]),a._v(" "),r("h1",{attrs:{id:"_14-3-transition-组件的实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-transition-组件的实现原理"}},[a._v("#")]),a._v(" 14.3 Transition 组件的实现原理")]),a._v(" "),r("h1",{attrs:{id:"_14-3-1-原生-dom-的过渡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-1-原生-dom-的过渡"}},[a._v("#")]),a._v(" 14.3.1 原生 DOM 的过渡")]),a._v(" "),r("h1",{attrs:{id:"_14-3-2-实现-transition-组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-2-实现-transition-组件"}},[a._v("#")]),a._v(" 14.3.2 实现 Transition 组件")]),a._v(" "),r("h1",{attrs:{id:"_14-4-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-4-总结"}},[a._v("#")]),a._v(" 14.4 总结")]),a._v(" "),r("h1",{attrs:{id:"第五篇-编译器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第五篇-编译器"}},[a._v("#")]),a._v(" 第五篇 编译器")]),a._v(" "),r("h1",{attrs:{id:"第15章-编译器核心技术概览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第15章-编译器核心技术概览"}},[a._v("#")]),a._v(" 第15章 编译器核心技术概览")]),a._v(" "),r("h1",{attrs:{id:"_15-1-模板-dsl-的编译器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-模板-dsl-的编译器"}},[a._v("#")]),a._v(" 15.1 模板 DSL 的编译器")]),a._v(" "),r("h1",{attrs:{id:"_15-2-parser-的实现原理与状态机"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-parser-的实现原理与状态机"}},[a._v("#")]),a._v(" 15.2 parser 的实现原理与状态机")]),a._v(" "),r("h1",{attrs:{id:"_15-3-构造-ast"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-3-构造-ast"}},[a._v("#")]),a._v(" 15.3 构造 AST")]),a._v(" "),r("h1",{attrs:{id:"_15-4-ast-的转换与插件化架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-ast-的转换与插件化架构"}},[a._v("#")]),a._v(" 15.4 AST 的转换与插件化架构")]),a._v(" "),r("h1",{attrs:{id:"_15-4-1-节点的访问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-1-节点的访问"}},[a._v("#")]),a._v(" 15.4.1 节点的访问")]),a._v(" "),r("h1",{attrs:{id:"_15-4-2-转换上下文与节点操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-2-转换上下文与节点操作"}},[a._v("#")]),a._v(" 15.4.2 转换上下文与节点操作")]),a._v(" "),r("h1",{attrs:{id:"_15-4-3-进入与退出"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-3-进入与退出"}},[a._v("#")]),a._v(" 15.4.3 进入与退出")]),a._v(" "),r("h1",{attrs:{id:"_15-5-将模板-ast-转为-javascript-ast"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-5-将模板-ast-转为-javascript-ast"}},[a._v("#")]),a._v(" 15.5 将模板 AST 转为 JavaScript AST")]),a._v(" "),r("h1",{attrs:{id:"_15-6-代码生成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-6-代码生成"}},[a._v("#")]),a._v(" 15.6 代码生成")]),a._v(" "),r("h1",{attrs:{id:"_15-7-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-7-总结"}},[a._v("#")]),a._v(" 15.7 总结")]),a._v(" "),r("h1",{attrs:{id:"第16章-解析器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第16章-解析器"}},[a._v("#")]),a._v(" 第16章 解析器")]),a._v(" "),r("h1",{attrs:{id:"_16-1-文本模式及其对解析器的影响"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-文本模式及其对解析器的影响"}},[a._v("#")]),a._v(" 16.1 文本模式及其对解析器的影响")]),a._v(" "),r("h1",{attrs:{id:"_16-2-递归下降算法构造模板-ast"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-递归下降算法构造模板-ast"}},[a._v("#")]),a._v(" 16.2 递归下降算法构造模板 AST")]),a._v(" "),r("h1",{attrs:{id:"_16-3-状态机的开启与停止"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-3-状态机的开启与停止"}},[a._v("#")]),a._v(" 16.3 状态机的开启与停止")]),a._v(" "),r("h1",{attrs:{id:"_16-4-解析标签节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-4-解析标签节点"}},[a._v("#")]),a._v(" 16.4 解析标签节点")]),a._v(" "),r("h1",{attrs:{id:"_16-5-解析属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-5-解析属性"}},[a._v("#")]),a._v(" 16.5 解析属性")]),a._v(" "),r("h1",{attrs:{id:"_16-6-解析文本与解码-html-实体"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-6-解析文本与解码-html-实体"}},[a._v("#")]),a._v(" 16.6 解析文本与解码 HTML 实体")]),a._v(" "),r("h1",{attrs:{id:"_16-6-1-解析文本"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-6-1-解析文本"}},[a._v("#")]),a._v(" 16.6.1 解析文本")]),a._v(" "),r("h1",{attrs:{id:"_16-6-2-解码命名字符引用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-6-2-解码命名字符引用"}},[a._v("#")]),a._v(" 16.6.2 解码命名字符引用")]),a._v(" "),r("h1",{attrs:{id:"_16-6-3-解码数字字符引用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-6-3-解码数字字符引用"}},[a._v("#")]),a._v(" 16.6.3 解码数字字符引用")]),a._v(" "),r("h1",{attrs:{id:"_16-7-解析插值与注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-7-解析插值与注释"}},[a._v("#")]),a._v(" 16.7 解析插值与注释")]),a._v(" "),r("h1",{attrs:{id:"_16-8-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-8-总结"}},[a._v("#")]),a._v(" 16.8 总结")]),a._v(" "),r("h1",{attrs:{id:"第17章-编译优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第17章-编译优化"}},[a._v("#")]),a._v(" 第17章 编译优化")]),a._v(" "),r("h1",{attrs:{id:"_17-1-动态节点收集与补丁标志"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-动态节点收集与补丁标志"}},[a._v("#")]),a._v(" 17.1 动态节点收集与补丁标志")]),a._v(" "),r("h1",{attrs:{id:"_17-1-1-传统-diff-算法的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-1-传统-diff-算法的问题"}},[a._v("#")]),a._v(" 17.1.1 传统 Diff 算法的问题")]),a._v(" "),r("h1",{attrs:{id:"_17-1-2-block-与-patchflags"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-2-block-与-patchflags"}},[a._v("#")]),a._v(" 17.1.2 Block 与 PatchFlags")]),a._v(" "),r("h1",{attrs:{id:"_17-1-3-收集动态节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-3-收集动态节点"}},[a._v("#")]),a._v(" 17.1.3 收集动态节点")]),a._v(" "),r("h1",{attrs:{id:"_17-1-4-渲染器的运行时支持"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-4-渲染器的运行时支持"}},[a._v("#")]),a._v(" 17.1.4 渲染器的运行时支持")]),a._v(" "),r("h1",{attrs:{id:"_17-2-block-树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-block-树"}},[a._v("#")]),a._v(" 17.2 Block 树")]),a._v(" "),r("h1",{attrs:{id:"_17-2-1-带有-v-if-指令的节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-1-带有-v-if-指令的节点"}},[a._v("#")]),a._v(" 17.2.1 带有 v-if 指令的节点")]),a._v(" "),r("h1",{attrs:{id:"_17-2-2-带有-v-for-指令的节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-2-带有-v-for-指令的节点"}},[a._v("#")]),a._v(" 17.2.2 带有 v-for 指令的节点")]),a._v(" "),r("h1",{attrs:{id:"_17-2-3-fragment-的稳定性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-3-fragment-的稳定性"}},[a._v("#")]),a._v(" 17.2.3 Fragment 的稳定性")]),a._v(" "),r("h1",{attrs:{id:"_17-3-静态提升"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-3-静态提升"}},[a._v("#")]),a._v(" 17.3 静态提升")]),a._v(" "),r("h1",{attrs:{id:"_17-4-预字符串化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-4-预字符串化"}},[a._v("#")]),a._v(" 17.4 预字符串化")]),a._v(" "),r("h1",{attrs:{id:"_17-5-缓存内联事件处理函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-5-缓存内联事件处理函数"}},[a._v("#")]),a._v(" 17.5 缓存内联事件处理函数")]),a._v(" "),r("h1",{attrs:{id:"_17-6-v-once"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-6-v-once"}},[a._v("#")]),a._v(" 17.6 v-once")]),a._v(" "),r("h1",{attrs:{id:"_17-7-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-7-总结"}},[a._v("#")]),a._v(" 17.7 总结")]),a._v(" "),r("h1",{attrs:{id:"第六篇-服务端渲染"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第六篇-服务端渲染"}},[a._v("#")]),a._v(" 第六篇 服务端渲染")]),a._v(" "),r("h1",{attrs:{id:"第18章-同构渲染"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第18章-同构渲染"}},[a._v("#")]),a._v(" 第18章 同构渲染")]),a._v(" "),r("h1",{attrs:{id:"_18-1-csr、ssr-以及同构渲染"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-csr、ssr-以及同构渲染"}},[a._v("#")]),a._v(" 18.1 CSR、SSR 以及同构渲染")]),a._v(" "),r("h1",{attrs:{id:"_18-2-将虚拟-dom-渲染为-html-字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-将虚拟-dom-渲染为-html-字符串"}},[a._v("#")]),a._v(" 18.2 将虚拟 DOM 渲染为 HTML 字符串")]),a._v(" "),r("h1",{attrs:{id:"_18-3-将组件渲染为-html-字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-将组件渲染为-html-字符串"}},[a._v("#")]),a._v(" 18.3 将组件渲染为 HTML 字符串")]),a._v(" "),r("h1",{attrs:{id:"_18-4-客户端激活的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-4-客户端激活的原理"}},[a._v("#")]),a._v(" 18.4 客户端激活的原理")]),a._v(" "),r("h1",{attrs:{id:"_18-5-编写同构的代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-5-编写同构的代码"}},[a._v("#")]),a._v(" 18.5 编写同构的代码")]),a._v(" "),r("h1",{attrs:{id:"_18-5-1-组件的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-5-1-组件的生命周期"}},[a._v("#")]),a._v(" 18.5.1 组件的生命周期")]),a._v(" "),r("h1",{attrs:{id:"_18-5-2-使用跨平台的-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-5-2-使用跨平台的-api"}},[a._v("#")]),a._v(" 18.5.2 使用跨平台的 API")]),a._v(" "),r("h1",{attrs:{id:"_18-5-3-只在某一端引入模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-5-3-只在某一端引入模块"}},[a._v("#")]),a._v(" 18.5.3 只在某一端引入模块")]),a._v(" "),r("h1",{attrs:{id:"_18-5-4-避免交叉请求引起的状态污染"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-5-4-避免交叉请求引起的状态污染"}},[a._v("#")]),a._v(" 18.5.4 避免交叉请求引起的状态污染")]),a._v(" "),r("h1",{attrs:{id:"_18-5-5-组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-5-5-组件"}},[a._v("#")]),a._v(" 18.5.5 "),r("ClientOnly",[a._v(" 组件")])],1),a._v(" "),r("h1",{attrs:{id:"_18-6-总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-6-总结"}},[a._v("#")]),a._v(" 18.6 总结")]),a._v(" "),r("h1",{attrs:{id:"作者简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#作者简介"}},[a._v("#")]),a._v(" 作者简介")]),a._v(" "),r("hr"),a._v(" "),r("h1",{attrs:{id:"参考-ref"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考-ref"}},[a._v("#")]),a._v(" 参考 @ref")])])}),[],!1,null,null,null);t.default=_.exports}}]);